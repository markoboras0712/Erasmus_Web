{"remainingRequest":"C:\\Users\\boras\\OneDrive\\Desktop\\ErasmusWeb\\albert-i-gordana-zavrsni-main\\Erasmus_Web_Programming\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\boras\\OneDrive\\Desktop\\ErasmusWeb\\albert-i-gordana-zavrsni-main\\Erasmus_Web_Programming\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\boras\\OneDrive\\Desktop\\ErasmusWeb\\albert-i-gordana-zavrsni-main\\Erasmus_Web_Programming\\src\\store\\modules\\reservations.js","dependencies":[{"path":"C:\\Users\\boras\\OneDrive\\Desktop\\ErasmusWeb\\albert-i-gordana-zavrsni-main\\Erasmus_Web_Programming\\src\\store\\modules\\reservations.js","mtime":1624552975787},{"path":"C:\\Users\\boras\\OneDrive\\Desktop\\ErasmusWeb\\albert-i-gordana-zavrsni-main\\Erasmus_Web_Programming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\boras\\OneDrive\\Desktop\\ErasmusWeb\\albert-i-gordana-zavrsni-main\\Erasmus_Web_Programming\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\boras\\OneDrive\\Desktop\\ErasmusWeb\\albert-i-gordana-zavrsni-main\\Erasmus_Web_Programming\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0IG1haW5BeGlvcyBmcm9tICdheGlvcyc7CnZhciBzdGF0ZSA9IHsKICByZXNlcnZhdGlvbnM6IFtdCn07CnZhciBtdXRhdGlvbnMgPSB7CiAgJ1NFVF9SRVNFUlZBVElPTlMnOiBmdW5jdGlvbiBTRVRfUkVTRVJWQVRJT05TKHN0YXRlLCByZXNlcnZhdGlvbnMpIHsKICAgIHN0YXRlLnJlc2VydmF0aW9ucyA9IHJlc2VydmF0aW9uczsKICB9LAogICdTVE9SRV9SRVNFUlZBVElPTic6IGZ1bmN0aW9uIFNUT1JFX1JFU0VSVkFUSU9OKHN0YXRlLCByZXNlcnZhdGlvbikgewogICAgc3RhdGUucmVzZXJ2YXRpb25zLnB1c2gocmVzZXJ2YXRpb24pOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgaW5pdFJlc2VydmF0aW9uczogZnVuY3Rpb24gaW5pdFJlc2VydmF0aW9ucyhfcmVmKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQsCiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlOwogICAgbWFpbkF4aW9zLmdldCgnL3Jlc2VydmF0aW9ucy5qc29uJykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICB2YXIgcmVzZXJ2YXRpb25zID0gW107CgogICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgIHZhciByZXNlcnZhdGlvbiA9IGRhdGFba2V5XTsKICAgICAgICByZXNlcnZhdGlvbi5pZCA9IGtleTsKICAgICAgICByZXNlcnZhdGlvbnMucHVzaChyZXNlcnZhdGlvbik7CiAgICAgIH0KCiAgICAgIGNvbW1pdCgnU0VUX1JFU0VSVkFUSU9OUycsIHJlc2VydmF0aW9ucyk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnIpOwogICAgfSk7CiAgfSwKICBzdG9yZVJlc2VydmF0aW9uOiBmdW5jdGlvbiBzdG9yZVJlc2VydmF0aW9uKF9yZWYyLCByZXNlcnZhdGlvbkRhdGEpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQsCiAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMi5kaXNwYXRjaDsKICAgIGNvbW1pdCgnU1RPUkVfUkVTRVJWQVRJT04nLCByZXNlcnZhdGlvbkRhdGEpOwogIH0KfTsKdmFyIGdldHRlcnMgPSB7CiAgYXBhcnRtZW50UmVzZXJ2YXRpb25zOiBmdW5jdGlvbiBhcGFydG1lbnRSZXNlcnZhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoaWQpIHsKICAgICAgdmFyIGFwYXJ0bWVudFJlc2VydmF0aW9ucyA9IFtdOwogICAgICBhcGFydG1lbnRSZXNlcnZhdGlvbnMgPSBzdGF0ZS5yZXNlcnZhdGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChyZXNlcnZhdGlvbikgewogICAgICAgIHJldHVybiByZXNlcnZhdGlvbi5hcGFydG1lbnRJZCA9PT0gaWQ7CiAgICAgIH0pOwogICAgICByZXR1cm4gYXBhcnRtZW50UmVzZXJ2YXRpb25zOwogICAgfTsKICB9LAogIHJlc2VydmF0aW9uczogZnVuY3Rpb24gcmVzZXJ2YXRpb25zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucmVzZXJ2YXRpb25zOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},{"version":3,"sources":["C:/Users/boras/OneDrive/Desktop/ErasmusWeb/albert-i-gordana-zavrsni-main/Erasmus_Web_Programming/src/store/modules/reservations.js"],"names":["mainAxios","state","reservations","mutations","reservation","push","actions","initReservations","commit","get","then","response","data","key","id","catch","err","console","log","storeReservation","reservationData","dispatch","getters","apartmentReservations","filter","apartmentId"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,OAAtB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,YAAY,EAAE;AADF,CAAd;AAIA,IAAMC,SAAS,GAAG;AAChB,oBADgB,4BACIF,KADJ,EACWC,YADX,EACyB;AACvCD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB;AACD,GAHe;AAIhB,qBAJgB,6BAIKD,KAJL,EAIYG,WAJZ,EAIyB;AACvCH,IAAAA,KAAK,CAACC,YAAN,CAAmBG,IAAnB,CAAwBD,WAAxB;AACD;AANe,CAAlB;AASA,IAAME,OAAO,GAAG;AACdC,EAAAA,gBADc,kCACuB;AAAA,QAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,QAATP,KAAS,QAATA,KAAS;AACnCD,IAAAA,SAAS,CAACS,GAAV,CAAc,oBAAd,EACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,UAAMV,YAAY,GAAG,EAArB;;AACA,WAAK,IAAMW,GAAX,IAAkBD,IAAlB,EAAwB;AACtB,YAAMR,WAAW,GAAGQ,IAAI,CAACC,GAAD,CAAxB;AACAT,QAAAA,WAAW,CAACU,EAAZ,GAAiBD,GAAjB;AACAX,QAAAA,YAAY,CAACG,IAAb,CAAkBD,WAAlB;AACD;;AACDI,MAAAA,MAAM,CAAC,kBAAD,EAAqBN,YAArB,CAAN;AACD,KAVH,EAWGa,KAXH,CAWS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAXZ;AAYD,GAda;AAedG,EAAAA,gBAfc,mCAe0BC,eAf1B,EAe2C;AAAA,QAArCZ,MAAqC,SAArCA,MAAqC;AAAA,QAA7Ba,QAA6B,SAA7BA,QAA6B;AACvDb,IAAAA,MAAM,CAAC,mBAAD,EAAsBY,eAAtB,CAAN;AACD;AAjBa,CAAhB;AAoBA,IAAME,OAAO,GAAG;AACdC,EAAAA,qBAAqB,EAAE,+BAACtB,KAAD;AAAA,WAAW,UAACa,EAAD,EAAQ;AACxC,UAAIS,qBAAqB,GAAG,EAA5B;AACAA,MAAAA,qBAAqB,GAAGtB,KAAK,CAACC,YAAN,CAAmBsB,MAAnB,CAA0B,UAAApB,WAAW;AAAA,eAAIA,WAAW,CAACqB,WAAZ,KAA4BX,EAAhC;AAAA,OAArC,CAAxB;AACA,aAAOS,qBAAP;AACD,KAJsB;AAAA,GADT;AAMdrB,EAAAA,YANc,wBAMAD,KANA,EAMO;AACnB,WAAOA,KAAK,CAACC,YAAb;AACD;AARa,CAAhB;AAWA,eAAe;AACbD,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,SAAS,EAATA,SAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbgB,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import mainAxios from 'axios'\r\n\r\nconst state = {\r\n  reservations: []\r\n}\r\n\r\nconst mutations = {\r\n  'SET_RESERVATIONS' (state, reservations) {\r\n    state.reservations = reservations\r\n  },\r\n  'STORE_RESERVATION' (state, reservation) {\r\n    state.reservations.push(reservation)\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  initReservations ({ commit, state }) {\r\n    mainAxios.get('/reservations.json')\r\n      .then(response => {\r\n        const data = response.data\r\n        const reservations = []\r\n        for (const key in data) {\r\n          const reservation = data[key]\r\n          reservation.id = key\r\n          reservations.push(reservation)\r\n        }\r\n        commit('SET_RESERVATIONS', reservations)\r\n      })\r\n      .catch(err => console.log(err))\r\n  },\r\n  storeReservation ({ commit, dispatch }, reservationData) {\r\n    commit('STORE_RESERVATION', reservationData)\r\n  }\r\n}\r\n\r\nconst getters = {\r\n  apartmentReservations: (state) => (id) => {\r\n    var apartmentReservations = []\r\n    apartmentReservations = state.reservations.filter(reservation => reservation.apartmentId === id)\r\n    return apartmentReservations\r\n  },\r\n  reservations (state) {\r\n    return state.reservations\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}\r\n"]}]}